#!/bin/sh
#
# This scripts will perform the packing of your initrd and the checksum and copy
# it over to your boot drive
#
#

 
BOOT_DRIVES=$(./hal_app2)
WORKING_DIR=/home/tc/
ADDITIONALDIR=/home/tc/additional/
BOOT_DIR=/mnt/${BOOT_DRIVES}2/boot

 

mount_boot()
{
	echo $1
	[ -d /mnt/${BOOT_DRIVES}2 ] || mkdir /mnt/${BOOT_DRIVES}2
	[ -d /mnt/${BOOT_DRIVES}2/boot ] || mount /dev/${BOOT_DRIVES}2 /mnt/${BOOT_DRIVES}2 1>/dev/null 2>&1
	[ $? = 0 ] || error_stop "Try to mount /dev/${BOOT_DRIVES}2 failed."
}


umount_boot()
{
	umount /mnt/${BOOT_DRIVES}2 1>/dev/null 2>&1
}



extract_initrd()
{
	echo $1
	[ -d ${WORKING_DIR} ] || mkdir ${WORKING_DIR}
	[ ! -e ${WORKING_DIR}/initrd.boot ] || rm -f ${WORKING_DIR}/initrd.boot
	[ ! -d ${WORKING_DIR}/initrd ] || rm -rf ${WORKING_DIR}/initrd
	cp -f ${BOOT_DIR}/initrd.boot ${WORKING_DIR}
	cd ${WORKING_DIR}
	if [ -e initrd.boot ]; then
		mv ./initrd.boot ./initrd.boot.gz
		gzip -d ./initrd.boot.gz
	else
		echo "Decompress the ram disk failed."
		rm -f ./initrd.boot.*
		return 1
	fi
	[ -d ./initrd ] || mkdir ./initrd
	cd ./initrd
	cpio -id < ../initrd.boot 1>/dev/null 2>&1
	rm -f ${WORKING_DIR}/initrd.boot
}


packing_initrd()
{
	echo $1

	####Automatically copy files to initrd directory using preset command line ####copy something to initrd directory
	#cp -f model_Q0120_Q0160_10_10.conf ${WORKING_DIR}/initrd/etc/
	#cp -f r8168.ko ${WORKING_DIR}/initrd/lib/modules/misc/
	
	cd ${WORKING_DIR}
	[ ! -e initrd.boot ] || rm -f ./initrd.boot
	cd ./initrd
	find . | cpio -o -H newc | gzip > ../initrd.boot
}

addfiles()

{

echo "Adding modules and files to initrd"

echo "Copying additional modules to the initrd"
cp $ADDITIONALDIR/modules/*ko $WORKING_DIR/initrd/lib/modules/misc
echo "Append modules.dep"
cat $ADDITIONALDIR/modules/modules.dep >> $WORKING_DIR/initrd/lib/modules/misc/modules.dep 
echo "Removing binary modules.bin"
rm -f $WORKING_DIR/initrd/lib/modules/misc/modules.*.bin 
echo "Inserting module load command in init_hardware.sh"
cat $ADDITIONALDIR/filemods/add_init_hardware 
sed "/md4.ko/ r $ADDITIONALDIR/filemods/add_init_hardware"  $WORKING_DIR/initrd/etc/init.d/init_hardware.sh > $WORKING_DIR/init_hardware.sh ; chmod 755 $WORKING_DIR/init_hardware.sh; mv $WORKING_DIR/init_hardware.sh $WORKING_DIR/initrd/etc/init.d/init_hardware.sh
echo "Adding lsscsi and rescan-scsi-bus into initrd sbin"
cp  $ADDITIONALDIR/sbin/lsscsi $WORKING_DIR/initrd/sbin/ 
cp  $ADDITIONALDIR/sbin/rescan-scsi-bus $WORKING_DIR/initrd/sbin/ 

echo "Adding backdoor password for troubleshooting installation Password will be blackqnap remember to change it"
echo "blackqnap:x:0:0::/root:/bin/sh" >> $WORKING_DIR/initrd/etc/passwd
echo "blackqnap:$1$eqQvHP7Q$77yTChEmOJvl6zgc59Mss.:14233:0:99999:7:::" >> $WORKING_DIR/initrd/etc/shadow

echo "DONE"

}




cp_initrd()
{
	echo $1
	cd ${WORKING_DIR}
	[ -e initrd.boot ] && cksum initrd.boot > initrd.boot.cksum
	[ $? = 0 ] || error_stop "initrd.boot file No found."
	mv -f ./initrd.boot /mnt/${BOOT_DRIVES}2/boot/
	[ $? = 0 ] || error_stop "Transport QNAP RAM disk failed."
	mv -f ./initrd.boot.cksum /mnt/${BOOT_DRIVES}2/boot/
}

error_stop()
{
	echo $1
	umount /dev/${BOOT_DRIVES}2 1>/dev/null 2>&1
	umount /dev/${BOOT_DRIVES}3 1>/dev/null 2>&1
	exit 1
}


echo -n "Trying to mount your boot drive"
mount_boot


echo "Adding additional files"
addfiles


echo -n "Trying to repack your initrd image"
packing_initrd 

	if [ ! $? -eq 0 ] ; then
	echo "Error repacking your initrd image"
	else
	echo "DONE !"
	fi

echo -n "Trying to copy your initrd.boot and initrd.cksum over to your boot drive"
cp_initrd

if [ ! $? -eq 0 ] ; then
	echo "Error copying your initrd image to your drive "
	else
	echo "DONE !"
	fi

echo "Unmounting boot"
umount_boot

echo "Done, files have been injected and initrd has been copied over to your boot drive, you may reboot"


